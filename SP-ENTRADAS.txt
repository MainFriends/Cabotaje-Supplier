DELIMITER //
CREATE PROCEDURE SP_SEL_TYPE_ENTRIES(
						IN _COD_TYPE  BIGINT
)
BEGIN
		IF _COD_TYPE = 0 THEN
		SELECT * FROM TYP_PRODUCT_ENTRIES
        WHERE COD_TYPE != 1;
		ELSE
		SELECT * FROM TYP_PRODUCT_ENTRIES
        WHERE COD_TYPE = _COD_TYPE;
    END IF;
    END
//
CALL SP_SEL_TYPE_ENTRIES(0)

DELIMITER //
CREATE PROCEDURE SP_INS_TYPE_ENTRIES(
						IN 	_NAM_TYPE VARCHAR(15),
							_DES_TYPE VARCHAR(255)
)
BEGIN
IF EXISTS (SELECT NAM_TYPE FROM TYP_PRODUCT_ENTRIES WHERE _NAM_TYPE=NAM_TYPE) THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = 'El tipo de entrada ya existe';
    ELSE
    INSERT INTO CLIENT(NAM_TYPE, DES_TYPE)
	VALUES (_NAM_TYPE, _DES_TYPE);
    END IF;
END
//

call SP_INS_TYPE_ENTRIES('PANOCHA','PANOCHA')

DELIMITER //
CREATE PROCEDURE SP_DEL_TYPE_ENTRIES(
						IN _COD_TYPE  BIGINT
)
BEGIN
       DELETE FROM TYP_PRODUCT_ENTRIES
       WHERE COD_TYPE = _COD_TYPE;
END
//

CALL SP_DEL_TYPE_ENTRIES(4)

DELIMITER //
CREATE PROCEDURE SP_UPD_TYP_ENTRIES(
							IN	_COD_TYPE BIGINT,
								_NAM_TYPE VARCHAR(15),
                                _DES_TYPE VARCHAR(255)
)
BEGIN
START TRANSACTION;
		UPDATE TYP_PRODUCT_ENTRIES
		SET NAM_TYPE = _NAM_TYPE,
        DES_TYPE = _DES_TYPE
		WHERE COD_TYPE=_COD_TYPE;
        SET @NAME = (SELECT NAM_TYPE FROM TYP_PRODUCT_ENTRIES WHERE COD_TYPE = _COD_TYPE);
        
		IF @NAME = _NAM_TYPE THEN
			ROLLBACK;
			SIGNAL SQLSTATE '45000'
			SET MESSAGE_TEXT = 'El tipo de entrada ya se encuentra registrado.';
        ELSE
			COMMIT;
		END IF;
END

CALL SP_UPD_TYP_ENTRIES(2,'Devoluci√≥n','Devoluciones')




********************************************************************************************************************